{"version":3,"file":"static/js/279.04f85492.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/Form.module.css?312a","components/ContactForm/Form.jsx","components/ContactsList/ContactsList.jsx","components/Loader/Loader.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const normalizedFilter = selectFilter(state).toLowerCase();\n\n  return selectContacts(state).filter(contact => {\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__uexYC\",\"App\":\"Form_App__5-cHT\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './Form.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onAddNewContact = e => {\n    e.preventDefault();\n\n    if (contacts.some(e => e.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    if (contacts.some(e => e.number === number)) {\n      alert(`Number ${number} is already in contacts!`);\n      return;\n    }\n    const newContact = { id: nanoid(), name: name, number: number };\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={onAddNewContact}>\n      <h3>Add a contact</h3>\n      <label>\n        <input\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n        ></input>\n      </label>\n\n      <label>\n        <input\n          placeholder=\"Number\"\n          className={css.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        ></input>\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul>\n      {filteredContacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => (\n          <li key={id} id={id} name={name} number={number}>\n            <span>\n              {name}: {number}\n            </span>\n            <button onClick={() => onDeleteContact(id)}>Delete</button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactsList;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nexport const Loader = ({ visible }) => (\n  <InfinitySpin width=\"200\" color=\"#4fa94d\" visible={visible} />\n);\n\nLoader.propTypes = {\n  visible: PropTypes.bool,\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsFilter\":\"Filter_contactsFilter__r518r\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filter.slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChangeFilter = filter => {\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <label className={css.contactsFilter}>\n      Find contacts by name{' '}\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        onChange={e => onChangeFilter(e.target.value)}\n        placeholder=\"Search contact\"\n        value={filter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport ContactForm from 'components/ContactForm/Form';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Loader from 'components/Loader/Loader';\nimport Filter from 'components/Filter/Filter';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","normalizedFilter","toLowerCase","contact","name","includes","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","some","alert","newContact","id","nanoid","addContact","placeholder","pattern","title","required","value","onChange","target","type","filteredContacts","length","map","onClick","contactId","deleteContact","visible","width","color","setFilter","onChangeFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}